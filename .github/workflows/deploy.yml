name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: 1.21
  TERRAFORM_VERSION: 1.6.0

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Download dependencies
      run: make setup

    - name: Run tests
      run: make test

    - name: Build function
      run: make build-linux

    - name: Create Terraform variables file
      run: |
        cat > terraform/terraform.tfvars << EOF
        project_id = "${{ secrets.GCP_PROJECT_ID }}"
        github_token = "${{ secrets.GH_WORKFLOW_TOKEN }}"
        repo_owner = "${{ github.repository_owner }}"
        repo_name = "${{ secrets.GH_TARGET_REPO_NAME }}"
        environment = "production"
        EOF

    - name: Terraform Init
      run: |
        # Calculate bucket name same way as in main.tf
        PROJECT_SANITIZED=$(echo "${{ secrets.GCP_PROJECT_ID }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]//g')
        BUCKET_NAME="gcs-${PROJECT_SANITIZED}-youtube-webhook-source"
        
        terraform -chdir=terraform init \
          -backend-config="bucket=${BUCKET_NAME}"

    - name: Import existing resources
      run: |
        # Calculate resource identifiers
        PROJECT_SANITIZED=$(echo "${{ secrets.GCP_PROJECT_ID }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]//g')
        BUCKET_NAME="gcs-${PROJECT_SANITIZED}-youtube-webhook-source"
        SA_NAME="yt-webhook-production-2dfc5d65"
        
        # Import bucket if it exists (ignore errors if already imported)
        terraform -chdir=terraform import google_storage_bucket.function_source "${BUCKET_NAME}" || true
        
        # Import service account if it exists (ignore errors if already imported)  
        terraform -chdir=terraform import google_service_account.function_sa "projects/${{ secrets.GCP_PROJECT_ID }}/serviceAccounts/${SA_NAME}@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com" || true

    - name: Terraform Plan
      run: terraform -chdir=terraform plan -out=tfplan

    - name: Terraform Apply
      run: terraform -chdir=terraform apply tfplan

    - name: Get function URL
      id: function-url
      run: |
        URL=$(terraform -chdir=terraform output -raw function_url)
        echo "url=$URL" >> $GITHUB_OUTPUT

    - name: Test deployed function
      run: |
        echo "Testing deployed function..."
        curl -f "${{ steps.function-url.outputs.url }}?hub.challenge=test-challenge&hub.mode=subscribe&hub.topic=test"

    - name: Deployment summary
      run: |
        echo "ðŸš€ Production deployment successful!"
        echo "Function URL: ${{ steps.function-url.outputs.url }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"